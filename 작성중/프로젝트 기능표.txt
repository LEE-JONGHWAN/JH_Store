하드디스크 판매 사이트

\\\\\\\\\\\\\



=>개요
->하드디스크 판매를 목적으로 하는 홈페이지를 제작.
*홈페이지를 볼 상황에는 게스트 유저로서 페이지 확인 가능하게 한다.
*로그인은 목적에 따라 로그인 유저 관리를 시작한다.{관리자,판매자,일반유저}
*홈페이지 내부는 쇼핑 리스트 페이지 물품<클릭시> 상세 페이지 
게시글 <평가,문의>페이지 관리 페이지 등으로 분류한다.

=>상세부분
*<관리자>
-관리자는 판매자 유저 등록 및 일반유저 관리와 db의 정보등을 확인하는
권한을 부여한다. 

=====================================
판매자 유저<등록 & 수정 & 삭제>

판매자 유저의 제품 정보 <등록 & 수정 & 삭제>

일반 유저<등록 & 수정 & 삭제>

일반 유저의 구매목록<반품관리 & 리뷰관리>
=====================================

*<판매자>
-판매자는 일반 유저들이 구매할 제품들을 올릴수 있도록 한다.

===========================
<제품 등록 & 수정 & 삭제>

<제품 이미지 등록 & 수정 & 삭제>

<제품 설명 등록 & 수정 & 삭제>
===========================

*<일반유저>
-일반유저는 판매자의 제품들을 구매할 권한과 자신의 정보를 
수정할 권한을 가진다.
판매자 제품을 장바구니에 담거나 바로 구매를 통해 구매할 수 있게 한다.

=========================
-<장바구니>
제품 구매 & 수량수정 & 삭제

-<구매>
바로 구매

-<개인정보>
개인 정보 수정 
유저 탈퇴 
장바구니 등록 & 수정 & 삭제 
==========================


=>전반적인 시스템
->사용 프로그램
======================
*MariaDB<SQL프로그램 중 하나> -- DBeaver -><GUI로 볼수 있는 프로그램>

*java -- Eclipse

*Spring
======================

=>데이터베이스
->데이터베이스 작성 내용
*대상 데이터베이스
--jh-store
*root유저 
jhstoreAdmin

1.adacc -><관리자유저정보>
내부 커럼은 없다. mariadb내에 마스터 유저를 생성시킨다.
그것을 이용해서 참조하는 형식으로 생성한다.
권한은 해당 데이터베이스 내에 한정한다.
-> *root유저를 만들어서 각 테이블 정보를 생성 & 수정 & 삭제등을 가능하게 한다.
-각 생성 리스트 유저 정보를 확인할 수 있게 하고 전체 권한을 가진 정보로 이용한다.

->각 테이블 명칭 정리

1.account -><회원정보>
내부 컬럼
-accsr -><회원 Auto Increment> {Int(11)} --> *primary key 등록
-accid -><회원 가입시 입력하는 ID> --> *영어와 숫자를 섞어이용해야함<최소4-12글자> {varchar(12)}
-accpassword -><회원가입 시 넣는 비밀번호 로그인 시 이용된다> --> *영어,숫자,특수문자를 이용하여 생성<최소8-16글자>{varchar(16)}
-accname -><회원가입 시 넣는 이름> --> *한글 이름으로 입력 가능하게 한다.<최소2-20글자>{varchar(20)}
-accmail -><회원가입 시 넣는 이메일> --> *메일주소를 아이디로 입력하고 (네이버,다음 등)은 
							선택문으로 입력해 정보를 전체적으로 들어오게 한다.	{varchar(50)}
-danaddr -><단지정보> --><회원 가입시 입력하는 공간이다. 선택으로 기본주소를 입력한다.>  {varchar(100)}
-detailaddr -><상세주소정보> --><나머지 주소를 입력하는 구간이다.><아파트명 호실 등을 입력한다.> {varchar(50)}
									



2.sellacc -><판매자유저정보>
-sellusr -><회원 Auto Increment> {Int(11)}  --> *primary key로 연결한다. 
-sellaccid -><판매자 회원 가입시 입력하는 ID> --> *영어와 숫자를 섞어이용해야함<최소4-30글자> {varchar(30)}
-sellaccpassword -><판매자 회원 가입시 입력하는 비밀번호> --> *영어,숫자,특수문자를 이용하여 생성<최소8-16글자>{varchar(16)}
-sellaccname -><판매자의 기업명칭을 입력한다.> --> * 예)(주식회사)**** 등으로 입력되게 한다.{varchar(40)}
-sellaccaddr -><판매자의 기업주소를 입력한다.> --> * 예) 기본주소를 입력한다. {varchar(100)}
-selldetailaddr -><판매자의 기업주소를 입력한다.> -->* 예) 상세주소를 입력한다. {varchar(40)}
-sellaccphone -><판매자의 기업 전화번호를 입력한다.> --> * 예) 01011112222 {varchar(20)}

3.sellinfo -><회원이 구매한 정보를 이곳에 저장한다.> --> *회원ID&회원이름&단지정보&상세주소정보
내부 컬럼
-accsr -><회원 Auto Increment> --> *forign key로 연결한다. {Int(11)}
-accid -><회원정보로 연결된다.> {varchar(12)}
-accname -><회원 정보 이름을 입력한다.>{varchar(20)}
-danaddr -><단지정보> --> *forign key로 연결한다. {varchar(100)}
-detailaddr -><상세주소정보> --> *forign key로 연결한다. {varchar(50)}
-sellbrand -><구매 상품의 브랜드 명을 등록하기 위한 장소이다.>{varchar(30)}
-sellkinds -><구매 상품의 종류{HDD & SSD & M.2 & MvME 등을 이야기한다.>{varchar(15)}
-sellprice -><구매 상품의 가격을 지정한다.>{smallint}
-sellcount -><구매 상품 개수>{smallint}

4.shopbasket -><회원이 구매할 상품이 들어가는 바구니>
내부 컬럼
-bkesr -><회원이 담을때 들어가는 숫자이다.>  --> *primary key로 연결한다. 
-accsr -><회원이 물건을 담으면 알 수 있도록 회원Sr을 준다.> {Int(11)}  --> *forign key로 연결한다. 
-sellbrand -><판매상품의 브랜드 명을 등록하기 위한 장소이다.>{varchar(30)}
-sellkinds -><판매상품의 종류{HDD & SSD & M.2 & MvME 등을 이야기한다.>{varchar(15)}
-selldata -><판매상품의 용량 크기를 지정한다.{250GB & 500GB & 1TB & 2TB}등>{varchar(10)}
-sellprice -><판매상품의 가격>{smallint}
-bkcount -><등록 구매 상품 개수>{smallint}

5.selllist -> <판매상품을 등록 & 수정 & 삭제 & 읽어오기 등을 할 수 있게 된다.>
-sellsr -><판매상품을 알아볼수 있게 하기 위한 일련 번호이다.>{int(11)} --> *primary key로 연결한다. 
-sellbrand -><판매상품의 브랜드 명을 등록하기 위한 장소이다.>{varchar(30)}
-sellkinds -><판매상품의 종류{HDD & SSD & M.2 & MvME 등을 이야기한다.>{varchar(15)}
-selldata -><판매상품의 용량 크기를 지정한다.{250GB & 500GB & 1TB & 2TB}등>{varchar(10)}
-sellinven -><판매상품의 재고량을 지정한다.>{smallint}
-sellprice -><판매상품의 가격을 지정한다.>{smallint}
-sellinfo -><판매상품의 설명을 등록한다. 문자파일정보로>{생각중}
-sellimage -><판매상품의 이미지를 등록한다. jpg파일>{blob}
-sellcreate -><판매상품을 등록할 때의 날짜>{datetime}
-bksr -><장바구니 연결>{int(11)}  --> *forign key로 연결한다. 
-sellusr -><판매자 연결>{int(11)}  --> *forign key로 연결한다. 


 이후 게시판 테이블 추가 할 예정....
